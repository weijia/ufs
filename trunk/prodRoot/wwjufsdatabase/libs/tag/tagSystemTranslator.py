import tagSystemV0105 as oldTagSysimport tagSystemV2 as newTagSysdef translate():    t = oldTagSys.tagSystemShoveDb()    '''    t.tag('good', 'bad')    #print t.getTags('good')    #print t.getTags('good')    print t.getTags('D:/sys/pic/DSCF0015.JPG')    #t.tag('D:/sys/pic/DSCF0015.JPG','tag')    for i in t.getTags('D:/sys/pic/DSCF0015.JPG'):        print unicode(i).decode('utf8')    print t.getObjs('bad')    '''    '''    for i in t.tagDb.keys():        print 'find tag:',i    '''    n = newTagSys.tagSystemShoveDb()    cache = {}    for file in t.itemTagDb.keys():        print 'retrieving tag for:%s'%file        tags = t.itemTagDb[file]        print 'tag for %s is %s'%(file, str(tags))        for aTag in tags:            print 'adding:', aTag,':',file            if cache.has_key(aTag):                cache[aTag].append(file)            else:                cache[aTag] = [file]    for i in cache.keys():        print 'writing files for tag:',cache[i], ',',unicode(i)        #t.tagDb[i] = cache[i]        for j in cache[i]:            #n.appendTag(j, cache[i])            print "file:%s, tag:%s"%(unicode(j),unicode(i))            n.appendTag(unicode(j),[unicode(i)])        '''    for i in t.getAllTags():        print 'retrieving files for tag:', i        #for j in t.tagDb.getAllRecords():        #    print j        for j in t.enumObjsWithTagAndTime(i):            print j    '''if __name__=='__main__':    translate()