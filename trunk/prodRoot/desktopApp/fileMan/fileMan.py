import libSysfrom desktopApp.lib.transform import *import desktopApp.mobileApp.lib.simplejson as jsonimport uuidimport desktopApp.lib.attrSys as attrSysdef createDumpFile(cf, targetFile):    d = {}    allFiles = os.walk(cf)    for i in allFiles:        #Save file list for directory i[0], so later update can simply check if the list is equal to the current file list in the dir        dirId = str(uuid.uuid4())        d[dirId] = {}        dirPath = transformDirToInternal(i[0])        d[dirId][attrSys.localPathAttr] = dirPath        d[dirId][attrSys.sys_childItemList] = []        for k in i[2]:            #print os.path.join(i[0],k).decode('gb2312')            pa = transformDirToInternal(os.path.join(i[0],k))            ext = os.path.splitext(pa)[1]            #Add the file info to a submit package            d[dirId][attrSys.sys_childItemList].append(transformLocalStringToUnicode(k))            fileId = str(uuid.uuid4())            d[fileId] = {}            d[fileId][attrSys.localPathAttr] = pa            d[fileId][attrSys.originalParentPathAttr] = dirPath            d[fileId][attrSys.originalAccessAttr] = os.path.getatime(pa)            d[fileId][attrSys.originalChangeAttr] = os.path.getctime(pa)            d[fileId][attrSys.originalModifyAttr] = os.path.getmtime(pa)            d[fileId][attrSys.originalSizeAttr] = os.path.getsize(pa)      json.dump(d, targetFile)    def main(argv=None):    #processorArgvHandler(dummyProcessor, argv)    createDumpFile("d:/tmp/", open("d:/dumpTmp.txt","w"))if __name__ == "__main__":    #sys.exit(main(['','--path="d:/tmp/T_0002694687-35401.jpg"','--tags="helo,good,bye"']))    main()